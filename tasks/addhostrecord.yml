---
- name: Install infoblox-client
  command: /bin/bash -c "python -m pip install infoblox-client oslo.log oslo.serialization requests setuptools six urllib3"
  
- name: Install tzdata package
  command: /bin/bash -c "microdnf reinstall -y tzdata"

- name: set fact for the exclude ip class
  set_fact:
      ip_class: "{{CIDR[:-4]}}"

# Excluding the first ten addresses from the IP pool for lease
- name: set fact for exclude_range
  set_fact:
      exclude_range: "['{{ip_class}}1', '{{ip_class}}2', '{{ip_class}}3', '{{ip_class}}4', '{{ip_class}}5', '{{ip_class}}6', '{{ip_class}}7', '{{ip_class}}8', '{{ip_class}}9', '{{ip_class}}10']"

# Assigning the next available IP address in the CIDR to the new host
- name: Add new host record to Infoblox
  infoblox.nios_modules.nios_host_record:
      name: "{{ hostname }}.weizmann.ac.il"
      ipv4addrs:
        - ipv4addr: 
                "{{ lookup('infoblox.nios_modules.nios_next_ip',  CIDR, exclude=exclude_range, provider=nios_provider)[0] }}"
      state: present
      comment: "Created by Ansible Automation - Job {{ hostvars[inventory_hostname].awx_job_id }}"
      provider: "{{ nios_provider }}"
  register: status
  failed_when: "not status is search('already exists') and status.failed == true"
