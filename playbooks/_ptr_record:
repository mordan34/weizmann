> NIOS_PTR_RECORD    (/usr/lib/python3.6/site-packages/ansible/modules/net_tools/nios/nios_ptr_record.py)

        Adds and/or removes instances of PTR record objects from Infoblox NIOS servers.  This module manages NIOS `record:ptr' objects using the Infoblox
        WAPI interface over REST.

  * This module is maintained by an Ansible Partner
OPTIONS (= is mandatory):

- comment
        Configures a text string comment to be associated with the instance of this object.  The provided text string will be configured on the object
        instance. Maximum 256 characters.
        [Default: (null)]

- extattrs
        Allows for the configuration of Extensible Attributes on the instance of the object.  This argument accepts a set of key / value pairs for
        configuration.
        [Default: (null)]

= ipv4addr
        The IPv4 Address of the record. Mutually exclusive with the ipv6addr.
        (Aliases: ipv4)

= ipv6addr
        The IPv6 Address of the record. Mutually exclusive with the ipv4addr.
        (Aliases: ipv6)

- name
        The name of the DNS PTR record in FQDN format to add or remove from the system. The field is required only for an PTR object in Forward Mapping
        Zone.
        [Default: (null)]

- provider
        A dict object containing connection details.
        [Default: (null)]
        suboptions:
          host:
            description:
            - Specifies the DNS host name or address for connecting to the remote instance
              of NIOS WAPI over REST
            - Value can also be specified using `INFOBLOX_HOST' environment variable.
            required: true
            type: str
          http_request_timeout:
            default: 10
            description:
            - The amount of time before to wait before receiving a response
            - Value can also be specified using `INFOBLOX_HTTP_REQUEST_TIMEOUT' environment
              variable.
            type: int
          max_results:
            default: 1000
            description:
            - Specifies the maximum number of objects to be returned, if set to a negative
              number the appliance will return an error when the number of returned objects
              would exceed the setting.
            - Value can also be specified using `INFOBLOX_MAX_RESULTS' environment variable.
            type: int
          max_retries:
            default: 3
            description:
            - Configures the number of attempted retries before the connection is declared
              usable
            - Value can also be specified using `INFOBLOX_MAX_RETRIES' environment variable.
            type: int
          password:
            description:
            - Specifies the password to use to authenticate the connection to the remote instance
              of NIOS.
            - Value can also be specified using `INFOBLOX_PASSWORD' environment variable.
            type: str
          username:
            description:
            - Configures the username to use to authenticate the connection to the remote
              instance of NIOS.
            - Value can also be specified using `INFOBLOX_USERNAME' environment variable.
            type: str
          validate_certs:
            aliases:
            - ssl_verify
            default: false
            description:
            - Boolean value to enable or disable verifying SSL certificates
            - Value can also be specified using `INFOBLOX_SSL_VERIFY' environment variable.
            type: bool
          wapi_version:
            default: '2.1'
            description:
            - Specifies the version of WAPI to use
            - Value can also be specified using `INFOBLOX_WAP_VERSION' environment variable.
            - Until ansible 2.8 the default WAPI was 1.4
            type: str
        
        type: dict

= ptrdname
        The domain name of the DNS PTR record in FQDN format.


- state
        Configures the intended state of the instance of the object on the NIOS server.  When this value is set to `present', the object is configured on
        the device and when this value is set to `absent' the value is removed (if necessary) from the device.
        (Choices: present, absent)[Default: present]

- ttl
        Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, that the record is valid (cached).
        Zero indicates that the record should not be cached.
        [Default: (null)]

- view
        Sets the DNS view to associate this a record with. The DNS view must already be configured on the system
        (Aliases: dns_view)[Default: (null)]


NOTES:
      * This module must be run locally, which can be achieved by specifying `connection: local'.
      * Please read the :ref:`nios_guide` for more detailed information on how to use Infoblox with Ansible.


REQUIREMENTS:  infoblox_client

AUTHOR: Trebuchet Clement (@clementtrebuchet)
        METADATA:
          status:
          - preview
          supported_by: certified
        

EXAMPLES:

- name: Create a PTR Record
  nios_ptr_record:
    ipv4: 192.168.10.1
    ptrdname: host.ansible.com
    state: present
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local

- name: Delete a PTR Record
  nios_ptr_record:
    ipv4: 192.168.10.1
    ptrdname: host.ansible.com
    state: absent
    provider:
      host: "{{ inventory_hostname_short }}"
      username: admin
      password: admin
  connection: local


RETURN VALUES:
 # 
