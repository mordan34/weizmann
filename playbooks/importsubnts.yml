---
- name: Import all networks from ipam and creates on Satellite server
  hosts: satellite
  become: true
  vars_files:
    - ../group_vars/nios.yml
    - ../group_vars/vault

  tasks:
    - name: Get all ipam networks
      uri:
        follow_redirects: none
        validate_certs: true
        timeout: 20
        method: GET
        url: "https://{{ nios_hostname }}/wapi/v{{ nios_provider.wapi_version }}/network?_max_results=1"
        url_username: "{{ nios_user }}"
        url_password: "{{ nios_password }}"
      register: networks_json
      failed_when: false


    - set_fact: 
        networks: "{{ networks_json.json | list }}"


    - set_fact:
        subnets: "{{ environments | subelements('subnets') | list }}"


    - name: Create a new list
      set_fact:
        subnetsval: "{{ (subnetsval | default()) + ',' + item.1 }}"
      loop: "{{ subnets }}"


    #- name: output the nested 'subnets' variable
     # debug:
      #  msg: "{{ item }}"
      #loop: "{{ lookup('dict', subnets) }}"

    - name: Creates all subnets under Satellite
      redhat.satellite.subnet:
        name: "Subnet {{ item.network }}"
        description: "{{ item | selectattr('comment', 'defined')}}"
        network: "{{ item.network | ipaddr('network') }}"
        mask: "{{ item.network | ipaddr('netmask') }}"
        gateway: "{{ item.network | ipaddr('net') | ipaddr('-11') | ipaddr('host/prefix') | ipaddr('address') }}"
        dns_primary: "132.77.4.1"
        dns_secondary: "132.77.22.1"
        boot_mode: "Static"
        dhcp_proxy: "{{ inventory_hostname }}"
        dns_proxy: "{{ inventory_hostname }}"
        vlanid: "{{ item.comment | regex_search('[0-9]+', ignorecase=True) }}"
        mtu: 1500
        domains:
          - "weizmann.ac.il"
        organizations:
          - "Weizmann Institute of Science"
        locations:
          - "Weizmann DC"
        server_url: "https://{{ inventory_hostname }}"
        username: '{{ lookup("env","SAT_USERNAME") }}'
        password: '{{ lookup("env","SAT_PASSWORD") }}'
        state: present
      loop: "{{ networks }}"
      when: 
         - item.comment is defined
         - item.comment | regex_search('[0-9]+', ignorecase=True)  != none
         - item.network in subnetsval

